From a784190a1c16f31c904c291f4101c454fef9a32d Mon Sep 17 00:00:00 2001
From: Roald Clark <roaldclark@gmail.com>
Date: Fri, 10 Jan 2025 03:51:35 +0800
Subject: [PATCH 1/2] Replace fusermount with fusermount3

Signed-off-by: Roald Clark <roaldclark@gmail.com>
---
 src/manager.rs                           | 8 ++++----
 src/model/filesystem_mount_definition.rs | 4 ++--
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/manager.rs b/src/manager.rs
index 183dc0c..478d2a8 100644
--- a/src/manager.rs
+++ b/src/manager.rs
@@ -171,7 +171,7 @@ impl Manager {
 
     /// Unmounts a filesystem definition (unless already unmounted) and removes its mount path from the filesystem hierarchy.
     ///
-    /// Unmounting is performed via a command call to `fusermount -u ..`,
+    /// Unmounting is performed via a command call to `fusermount3 -u ..`,
     /// which may fail on filesystems that are currently busy.
     /// In such cases, a fallback is performed - the `sshfs` process responsible for the mount gets terminated.
     pub fn umount(&self, definition: &FilesystemMountDefinition) -> Result<(), SftpManError> {
@@ -193,8 +193,8 @@ impl Manager {
                 self.kill_sshfs_for_definition(definition)?;
 
                 // Killing successfully is good enough to unmount.
-                // We don't need to call do_umount() again, as calling `fusermount -u ..` (etc), may fail with:
-                // > CommandUnsuccessfulError("fusermount" "-u" "/home/user/mounts/storage", Output { status: ExitStatus(unix_wait_status(256)), stdout: "", stderr: "fusermount: entry for /path not found in /etc/mtab\n" })
+                // We don't need to call do_umount() again, as calling `fusermount3 -u ..` (etc), may fail with:
+                // > CommandUnsuccessfulError("fusermount3" "-u" "/home/user/mounts/storage", Output { status: ExitStatus(unix_wait_status(256)), stdout: "", stderr: "fusermount: entry for /path not found in /etc/mtab\n" })
                 // We only need to clean up now.
 
                 self.clean_up_after_unmount(definition);
@@ -263,7 +263,7 @@ impl Manager {
         cmd_ssh.arg("-V");
         cmds.push(cmd_ssh);
 
-        let mut cmd_ssh = Command::new("fusermount");
+        let mut cmd_ssh = Command::new("fusermount3");
         cmd_ssh.arg("-V");
         cmds.push(cmd_ssh);
 
diff --git a/src/model/filesystem_mount_definition.rs b/src/model/filesystem_mount_definition.rs
index 2e8d36c..580a5c9 100644
--- a/src/model/filesystem_mount_definition.rs
+++ b/src/model/filesystem_mount_definition.rs
@@ -226,11 +226,11 @@ impl FilesystemMountDefinition {
 
         let mut list: Vec<Command> = Vec::new();
 
-        // Unmounting is done via `fusermount -u`.
+        // Unmounting is done via `fusermount3 -u`.
         // Using `nix::mount::umount` or `nix::mount::umount2` sounds like a good idea,
         // but those require special privileges (`CAP_SYS_ADMIN``) and return `EPERM` to regular users.
 
-        let mut cmd = Command::new("fusermount");
+        let mut cmd = Command::new("fusermount3");
         cmd.arg("-u").arg(self.local_mount_path());
 
         list.push(cmd);
-- 
2.47.1


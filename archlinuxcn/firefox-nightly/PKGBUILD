# Maintainer: lilydjwg <lilydjwg@gmail.com>
# Contributor: Bruno Pagani (a.k.a. ArchangeGabriel) <bruno.n.pagani@gmail.com>
# Contributor: Cedric MATHIEU <me.xenom @ gmail.com>

_name=firefox
_channel=nightly
pkgbase=firefox-nightly
pkgname=()
_version=139.0a1
pkgver=139.0a1.20250402.12
pkgrel=1
arch=('x86_64')
license=('MPL-2.0')
depends=('dbus-glib' 'gtk3' 'libxt' 'nss' 'mime-types')
optdepends=('pulseaudio: audio support'
            'ffmpeg: h.264 video'
            'hunspell: spell checking'
            'hyphen: hyphenation'
            'libnotify: notification integration'
            'networkmanager: location detection via available WiFi networks'
            'speech-dispatcher: text-to-speech'
            'xdg-desktop-portal: Screensharing with Wayland'
            'startup-notification: support for FreeDesktop Startup Notification')
_url="https://ftp.mozilla.org/pub/${_name}/nightly/latest-mozilla-central-l10n"
_filename_prefix="20250402.12-"
source=("${pkgbase}.desktop")
sha512sums=('b58c1b3b09772d0866d511e83e3c7f54db0fe71d2978d2a06bd19b25c020f16e201aab825f0b3d5e9f0c1a3e9db028018e5e38f7ee4868e321938f11cb5ac817'
            'f38a376fd4afc5962f6619b88248ffcc2122ce64f1aa75e6ab62d5b3cd592b22332aa7b2660531968bf906dc97c89a8014f02ce0100090b127e7e900fe325cb9'
            'SKIP'
            '1744b2c8ee01bec2847d2ffdd6a7cb83ad103d41ca3e40800f444c7f5bc41de8d33107a04dd967589153900a4c9d2fb373475c0efb6a243a9bc2fb30a97125c7'
            'SKIP'
            '3b0d6475f689cf34f2eb8cd42e28beef53d3f398e7655fa6a77d060f8bc1dd3abca5606d5e2bcbb003dd9fb039d0ac22a96a7ca8ab37e73317570bf75b4a8d6b'
            'SKIP'
            '9af1031f04a16e502259eefff6027d3d203c49014db2dcf84d80b822f723cc4eaf58d5199a0a49d959b769d2ffe90d469cb5d31623eb91ddaded8bfea1e53242'
            'SKIP')
validpgpkeys=('14F26682D0916CDD81E37B6D61B7B526D98F0353'
              '097B313077AE62A02F84DA4DF1A6668FBB7D572E') # Mozilla’s GnuPG release key

_languages=(en-US zh-CN ja zh-TW)

for _lang in "${_languages[@]}"; do
  _locale=${_lang}
  _pkgname=firefox-nightly-${_locale,,}
  _src="${_name}-${_version}.${_lang}.linux"
  _filename="${_filename_prefix}${_src}-x86_64.tar.xz"

  pkgname+=($_pkgname)
  source+=("${_filename}"::"${_url}/${_src}-x86_64.tar.xz"
           "${_filename}.asc"::"${_url}/${_src}-x86_64.tar.xz.asc")
  eval "package_$_pkgname() {
    msg2 'Removing old firefox directory...'
    rm -rf firefox
    msg2 'Extract ${_filename}...'
    bsdtar -xf ${_filename}
    _package $_lang
  }"
done

# Don't extract anything because they'll override each other
noextract=(${source[@]%%::*})

_package() {
  OPT_PATH="opt/${pkgbase}"
  pkgdesc="Standalone Web Browser from Mozilla — Nightly build ($1)"
  url="https://www.mozilla.org/$1/${_name}/${_channel}"
  provides=(firefox-${_channel}=$pkgver)
  conflicts=(firefox-${_channel} firefox-${_channel}-i18n-${1,,})
  replaces=(firefox-${_channel}-i18n-${1,,})

  # Install the package files
  install -d "${pkgdir}"/{usr/bin,opt}
  cp -r ${_name} "${pkgdir}"/${OPT_PATH}
  ln -s "/${OPT_PATH}/${_name}" "${pkgdir}"/usr/bin/${pkgbase}

  # Install .desktop files
  install -Dm644 "${srcdir}"/${pkgbase}.desktop -t "${pkgdir}"/usr/share/applications

  # Install icons
  SRC_LOC="${srcdir}"/${_name}/browser
  DEST_LOC="${pkgdir}"/usr/share/icons/hicolor
  for i in 16 32 48 64 128; do
      install -Dm644 "${SRC_LOC}"/chrome/icons/default/default${i}.png "${DEST_LOC}"/${i}x${i}/apps/${pkgbase}.png
  done

  cat <<EOF | install -Dm644 /dev/stdin "${pkgdir}"/${OPT_PATH}/browser/defaults/preferences/vendor.js
pref("intl.locale.requested", "");
pref("spellchecker.dictionary_path", "/usr/share/hunspell");
EOF

  # Disable auto-updates
  if [[ $1 == "zh-CN" ]]; then
    # Change homepage for zh_CN to avoid ADs and tracks
    cat <<EOF | install -Dm644 /dev/stdin "${pkgdir}"/${OPT_PATH}/distribution/policies.json
{"policies": {"DisableAppUpdate": true, "Homepage": {"URL": "about:home"}}}
EOF
  else
    cat <<EOF | install -Dm644 /dev/stdin "${pkgdir}"/${OPT_PATH}/distribution/policies.json
{"policies": {"DisableAppUpdate": true}}
EOF
  fi
}
